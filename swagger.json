{
  "swagger": "2.0",
  "info": {
    "description": "stable api",
    "version": "1.0.0",
    "title": "STABLE API"
  },
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "Stable"
    },
    {
      "name": "Role"
    },
    {
      "name": "Contact"
    },
    {
      "name": "HorseContributorJob"
    },
    {
      "name": "Pension"
    },
    {
      "name": "HorseContributor"
    },
    {
      "name": "Additive"
    },
    {
      "name": "Horse"
    },
    {
      "name": "Task"
    },
    {
      "name": "Lesson"
    },
    {
      "name": "Event"
    },
    {
      "name": "Competition"
    },
    {
      "name": "Ride"
    },
    {
      "name": "Eventable"
    },
    {
      "name": "DailyRide"
    },
    {
      "name": "AdditiveData"
    },
    {
      "name": "HorseContributorHorseContributorJob"
    },
    {
      "name": "Invoice"
    }
  ],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\""
    }
  },
  "paths": {
    "/authentication/register": {
      "post": {
        "summary": "Create a new user (client)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "passwordConfirm"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "passwordConfirm": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Register a new client"
      }
    },
    "/authentication/register-manually": {
      "post": {
        "summary": "Create a new user (any role) [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "passwordConfirm",
                "roleId"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "passwordConfirm": {
                  "type": "string"
                },
                "roleId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Register a new user (any role)"
      }
    },
    "/authentication/confirm/{confirmationCode}": {
      "get": {
        "summary": "Confirm a user",
        "parameters": [
          {
            "in": "path",
            "name": "confirmationCode",
            "type": "string",
            "required": true,
            "description": "confirmation code"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "confirm a user with his confirmation code"
      }
    },
    "/authentication/login": {
      "post": {
        "summary": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Login"
      }
    },
    "/authentication/me": {
      "delete": {
        "summary": "Delete current user",
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Delete current user"
      },
      "put": {
        "summary": "Update current user",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password",
                "passwordConfirm"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "passwordConfirm": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "Update current user"
      }
    },
    "/horse_contributor_jobs": {
      "get": {
        "summary": "List all horseContributor Jobs",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "HorseContributorJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributorJobList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new horseContributorJob [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributorJob"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "HorseContributorJob"
        ],
        "description": "Create new horseContributorJob"
      }
    },
    "/horse_contributor_jobs/{id}": {
      "get": {
        "summary": "Get horseContributorJob by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horseContributorJob id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributorJob"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HorseContributorJob"
        ],
        "description": "Get horseContributorJob by id"
      },
      "delete": {
        "summary": "Delete horseContributorJob by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horseContributorJob id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HorseContributorJob"
        ],
        "description": "Delete horseContributorJob by id"
      },
      "put": {
        "summary": "Update horseContributorJob, [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "HorseContributorJob id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributorJob"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "HorseContributorJob"
        ],
        "description": "Update horseContributorJob"
      }
    },
    "/stables/{id}": {
      "get": {
        "summary": "Get stable by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "stable id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stable"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Stable"
        ],
        "description": "Get stable by id"
      },
      "put": {
        "summary": "Update stable [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "vat": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "iban": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "invoicePrefix": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "stable id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stable"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Stable"
        ],
        "description": "Update stable"
      }
    },
    "/roles": {
      "get": {
        "summary": "List all roles",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new role [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "parentId"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "parentId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "description": "Create new role"
      }
    },
    "/roles/{id}": {
      "get": {
        "summary": "Get role by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "description": "Get role by id"
      },
      "delete": {
        "summary": "Delete role by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "description": "Delete role by id"
      },
      "put": {
        "summary": "Update role, [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "parentId"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "parentId": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "description": "Update role"
      }
    },
    "/contacts": {
      "get": {
        "summary": "List contacts (result depending of role)  [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Contact"
        ],
        "description": "List contacts (result depending of role)",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new contact [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "userId",
                "firstName",
                "lastName",
                "address"
              ],
              "properties": {
                "userId": {
                  "type": "integer"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "mobile": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "description": "Create new contact"
      }
    },
    "/contacts/by-role/{roleId}": {
      "get": {
        "summary": "Get contacts by roleId [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "type": "integer",
            "required": true,
            "description": "role id"
          }
        ],
        "tags": [
          "Contact"
        ],
        "description": "Get contacts by roleId",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Get contact by id  [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "contact id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "description": "Get contact by id"
      },
      "delete": {
        "summary": "Delete contact by id  [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "contact id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "description": "Delete contact by id"
      },
      "put": {
        "summary": "Update contact, [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "firstName",
                "lastName",
                "address"
              ],
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "mobile": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "contact id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "description": "Update contact"
      }
    },
    "/pensions": {
      "get": {
        "summary": "List all pensions",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Pension"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PensionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new pension [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "monthlyPrice",
                "description"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "monthlyPrice": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pension"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Pension"
        ],
        "description": "Create new pension"
      }
    },
    "/pensions/{id}": {
      "get": {
        "summary": "Get pension by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "pension id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PensionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Pension"
        ],
        "description": "Get pension by id"
      },
      "delete": {
        "summary": "Delete pension by id  [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "pension id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Pension"
        ],
        "description": "Delete pension by id"
      },
      "put": {
        "summary": "Update pension, [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "monthlyPrice",
                "description"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "monthlyPrice": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "pension id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pension"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Pension"
        ],
        "description": "Update pension"
      }
    },
    "/horse_contributors": {
      "get": {
        "summary": "List all horseContributors",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "HorseContributor"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributorList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new horseContributor",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "firstName",
                "lastName",
                "email"
              ],
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributor"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "HorseContributor"
        ],
        "description": "Create new horseContributor"
      }
    },
    "/horse_contributors/{id}": {
      "get": {
        "summary": "Get horseContributor by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horseContributor id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributorList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HorseContributor"
        ],
        "description": "Get horseContributor by id"
      },
      "delete": {
        "summary": "Delete horseContributor by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horseContributor id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "HorseContributor"
        ],
        "description": "Delete horseContributor by id"
      },
      "put": {
        "summary": "Update horseContributorJob, [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "firstName",
                "lastName",
                "email"
              ],
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horseContributor id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseContributor"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "HorseContributor"
        ],
        "description": "Update horseContributorJob"
      }
    },
    "/additives": {
      "get": {
        "summary": "List all additives [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Additive"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdditiveList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new additive [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "price"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Additive"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Additive"
        ],
        "description": "Create new additive"
      }
    },
    "/additives/{id}": {
      "get": {
        "summary": "Get additive by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "additive id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Additive"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Additive"
        ],
        "description": "Get additive by id"
      },
      "delete": {
        "summary": "Delete additive by id [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "additive id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Additive"
        ],
        "description": "Delete additive by id"
      },
      "put": {
        "summary": "Update additive, [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "price"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "additive id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Additive"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Additive"
        ],
        "description": "Update additive"
      }
    },
    "/horses": {
      "get": {
        "summary": "List all horses (result depending of role) [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Horse"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorseList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new horse [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "ownerId",
                "pensionId",
                "name",
                "comment"
              ],
              "properties": {
                "ownerId": {
                  "type": "integer"
                },
                "pensionId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "horsemen": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "additives": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Horse"
        ],
        "description": "Create new horse"
      }
    },
    "/horses/{id}": {
      "get": {
        "summary": "Get horse by id [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Horse"
        ],
        "description": "Get horse by id"
      },
      "delete": {
        "summary": "Delete horse by id [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Horse"
        ],
        "description": "Delete horse by id"
      },
      "put": {
        "summary": "Update horse, [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "ownerId",
                "pensionId",
                "name",
                "comment",
                "horsemen"
              ],
              "properties": {
                "ownerId": {
                  "type": "integer"
                },
                "pensionId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "horsemen": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "additives": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Horse"
        ],
        "description": "Update horse"
      }
    },
    "/horses/{horseId}/add": {
      "post": {
        "summary": "Add horse additive data [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "additiveIds"
              ],
              "properties": {
                "additiveIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "horseId",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "AdditiveData"
        ],
        "description": "Add horse additive data"
      }
    },
    "/horses/{horseId}/cancel": {
      "post": {
        "summary": "Cancel horse additive data [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "additiveDataIds"
              ],
              "properties": {
                "additiveDataIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "horseId",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "AdditiveData"
        ],
        "description": "Cancel horse additive data"
      }
    },
    "/horses/{horseId}/addJobs": {
      "post": {
        "summary": "Associate horseContributor to HorseContributorJobs ids for this horse  [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "horseContributorId",
                "horseContributorJobIds"
              ],
              "properties": {
                "horseContributorId": {
                  "type": "integer"
                },
                "horseContributorJobIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "horseId",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "HorseContributorHorseContributorJob"
        ],
        "description": "AContributor to HorseContributorJobs ids for this horse"
      }
    },
    "/horses/{horseId}/removeJobs": {
      "post": {
        "summary": "Delete horseContributor's HorseContributorJobs for this horse  [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "horseContributorHorseContributorJobIds"
              ],
              "properties": {
                "horseContributorHorseContributorJobIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "horseId",
            "type": "integer",
            "required": true,
            "description": "horse id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Horse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "HorseContributorHorseContributorJob"
        ],
        "description": "Delete horseContributor's HorseContributorJobs for this horse"
      }
    },
    "/tasks": {
      "get": {
        "summary": "List all tasks (result depending of role) [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "employeeId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "creatorId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "startingAt",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Task"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new task [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "employeeId",
                "name",
                "description",
                "startingAt",
                "endingAt"
              ],
              "properties": {
                "employeeId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                },
                "remark": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Create new task"
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get task by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "task id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Get task by id"
      },
      "delete": {
        "summary": "Delete task by id [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "task id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Delete task by id"
      },
      "put": {
        "summary": "Update task [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "creatorId",
                "employeeId",
                "name",
                "description",
                "startingAt",
                "endingAt",
                "status",
                "remark"
              ],
              "properties": {
                "creatorId": {
                  "type": "integer"
                },
                "employeeId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "remark": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "task id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "description": "Update task"
      }
    },
    "/lessons": {
      "get": {
        "summary": "List all lessons (result depending of role) [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creatorId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "clientId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "startingAt",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LessonList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new lesson [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "clientId",
                "startingAt",
                "endingAt"
              ],
              "properties": {
                "clientId": {
                  "type": "integer"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lesson"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Lesson"
        ],
        "description": "Create new lesson"
      }
    },
    "/lessons/{id}": {
      "get": {
        "summary": "Get lesson by id [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "lesson id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lesson"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Lesson"
        ],
        "description": "Get lesson by id"
      },
      "delete": {
        "summary": "Delete lesson by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "lesson id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Lesson"
        ],
        "description": "Delete lesson by id"
      },
      "put": {
        "summary": "Update lesson [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "startingAt",
                "endingAt",
                "status"
              ],
              "properties": {
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "lesson id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lesson"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Lesson"
        ],
        "description": "Update lesson"
      }
    },
    "/events": {
      "get": {
        "summary": "List all events",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creatorId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "startingAt",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "endingAt",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "participants",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "tags": [
          "Event"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new event [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "startingAt",
                "endingAt",
                "participants"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                },
                "participants": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Event"
        ],
        "description": "Create new event"
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Get event by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "event id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Event"
        ],
        "description": "Get event by id"
      },
      "delete": {
        "summary": "Delete event by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "event id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Event"
        ],
        "description": "Delete event by id"
      },
      "put": {
        "summary": "Update event [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "startingAt",
                "endingAt"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "event id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Event"
        ],
        "description": "Update event"
      },
      "post": {
        "summary": "(Un)Subscribe to an event",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "event id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Event"
        ],
        "description": "(Un)Subscribe to an event"
      }
    },
    "/competitions": {
      "get": {
        "summary": "List all competitions",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "creatorId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "startingAt",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "endingAt",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "participants",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "tags": [
          "Competition"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompetitionList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new competition [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "startingAt",
                "endingAt",
                "participants"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                },
                "participants": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Competition"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Competition"
        ],
        "description": "Create new competition"
      }
    },
    "/competitions/{id}": {
      "get": {
        "summary": "Get competition by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "competition id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Competition"
        ],
        "description": "Get competition by id"
      },
      "delete": {
        "summary": "Delete competition by id [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "competition id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Competition"
        ],
        "description": "Delete competition by id"
      },
      "put": {
        "summary": "Update competition [ADMIN, EMPLOYEE]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "startingAt",
                "endingAt"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "startingAt": {
                  "type": "string"
                },
                "endingAt": {
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "competition id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Competition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Competition"
        ],
        "description": "Update competition"
      },
      "post": {
        "summary": "(Un)Subscribe to a competition",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "competition id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Competition"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Competition"
        ],
        "description": "(Un)Subscribe to a competition"
      }
    },
    "/rides": {
      "get": {
        "summary": "List all rides",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Ride"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RideList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new ride [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "period",
                "price"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "period": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Ride"
        ],
        "description": "Create new ride"
      }
    },
    "/rides/{id}": {
      "get": {
        "summary": "Get ride by id",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "ride id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Ride"
        ],
        "description": "Get ride by id"
      },
      "delete": {
        "summary": "Delete ride by id  [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "ride id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Ride"
        ],
        "description": "Delete ride by id"
      },
      "put": {
        "summary": "Update ride, [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "period",
                "price"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "period": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "ride id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ride"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Ride"
        ],
        "description": "Update ride"
      }
    },
    "/daily-rides": {
      "get": {
        "summary": "List all daily rides [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "horseId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "horseName",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "taskStatus",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "taskStartingAt",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "DailyRide"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyRideList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create new daily ride [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "horseId",
                "task"
              ],
              "properties": {
                "horseId": {
                  "type": "integer"
                },
                "task": {
                  "type": "object",
                  "properties": {
                    "startingAt": {
                      "type": "string"
                    },
                    "remark": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyRide"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "DailyRide"
        ],
        "description": "Create new daily ride"
      }
    },
    "/daily-rides/{id}": {
      "get": {
        "summary": "Get daily ride by id [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "daily ride id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyRide"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "DailyRide"
        ],
        "description": "Get daily ride by id"
      },
      "delete": {
        "summary": "Delete daily ride by id  [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "daily ride id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "DailyRide"
        ],
        "description": "Delete daily ride by id"
      },
      "put": {
        "summary": "Update daily ride [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task"
              ],
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "startingAt": {
                      "type": "string"
                    },
                    "remark": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "daily ride id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyRide"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "DailyRide"
        ],
        "description": "Update daily ride (task)"
      }
    },
    "/eventables": {
      "get": {
        "summary": "List all eventables [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [],
        "tags": [
          "Eventable"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "summary": "List all invoices [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "clientId",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "cronStatus",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "year",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "month",
            "type": "integer",
            "required": false
          }
        ],
        "tags": [
          "Invoice"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InvoiceList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "summary": "Get invoice by id [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "invoice id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Invoice"
        ],
        "description": "Get invoice by id"
      }
    },
    "/invoices/download/{id}": {
      "get": {
        "summary": "Invoice pdf upload by invoice id [ADMIN, EMPLOYEE, CLIENT]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "invoice id"
          }
        ],
        "tags": [
          "Invoice"
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/invoices/markAsPaid/{id}": {
      "post": {
        "summary": "Mark an invoice as paid [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "invoice id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Invoice"
        ],
        "description": "Mark an invoice as paid"
      }
    },
    "/invoices/markAsUnpaid/{id}": {
      "post": {
        "summary": "Mark an invoice as unpaid [ADMIN]",
        "security": [
          {
            "bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true,
            "description": "invoice id"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/UnprocessableEntityResponse"
            }
          }
        },
        "tags": [
          "Invoice"
        ],
        "description": "Mark an invoice as unpaid"
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "default": true
        }
      }
    },
    "TokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "UnprocessableEntityResponse": {
      "type": "object",
      "required": [
        "message",
        "errors"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnprocessableEntityResponseItem"
          }
        }
      }
    },
    "UnprocessableEntityResponseItem": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "param": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "HorseContributorJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HorseContributorJobList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "Stable": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "vat": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "invoicePrefix": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "parent": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "children": {
          "type": "array"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RoleList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Role"
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "invoicingAddress": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ContactList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Contact"
      }
    },
    "Pension": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "monthlyPrice": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PensionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pension"
      }
    },
    "HorseContributor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HorseContributorList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HorseContributor"
      }
    },
    "Additive": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AdditiveList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Additive"
      }
    },
    "Horse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "owner": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "invoicingAddress": {
              "type": "string"
            }
          }
        },
        "pension": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "monthlyPrice": {
              "type": "number"
            },
            "description": {
              "type": "string"
            }
          }
        },
        "horsemen": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "userId": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "invoicingAddress": {
                "type": "string"
              }
            }
          }
        },
        "additives": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "HorseList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Horse"
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "creator": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            }
          }
        },
        "employee": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "startingAt": {
          "type": "string",
          "format": "date-time"
        },
        "endingAt": {
          "type": "string",
          "format": "date-time"
        },
        "remark": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TaskList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Task"
      }
    },
    "Lesson": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "creator": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            }
          }
        },
        "client": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            }
          }
        },
        "startingAt": {
          "type": "string",
          "format": "date-time"
        },
        "endingAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LessonList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Lesson"
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "creator": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            }
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "userId": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }
        },
        "description": {
          "type": "string"
        },
        "startingAt": {
          "type": "string",
          "format": "date-time"
        },
        "endingAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EventList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Event"
      }
    },
    "Competition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "creator": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            }
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "userId": {
                "type": "integer"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }
        },
        "description": {
          "type": "string"
        },
        "startingAt": {
          "type": "string",
          "format": "date-time"
        },
        "endingAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CompetitionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Competition"
      }
    },
    "Ride": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RideList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Ride"
      }
    },
    "DailyRide": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "horse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "ownerId": {
              "type": "integer"
            },
            "pensionId": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            }
          }
        },
        "task": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "startingAt": {
              "type": "string"
            },
            "endingAt": {
              "type": "string"
            },
            "remark": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DailyRideList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DailyRide"
      }
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "client": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "userId": {
              "type": "integer"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "invoicingAddress": {
              "type": "string"
            }
          }
        },
        "cron": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "step": {
              "type": "string"
            },
            "status": {
              "type": "string"
            }
          }
        },
        "number": {
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "status": {
          "type": "string"
        },
        "dueDateAt": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "isUnpaidAfterDueDateAt": {
          "type": "boolean"
        }
      }
    },
    "InvoiceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Invoice"
      }
    }
  }
}